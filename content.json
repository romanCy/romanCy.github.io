{"meta":{"title":"pdChen的博客","subtitle":"前端技术学习","description":null,"author":"chenyu","url":"http://yoursite.com","root":"/"},"pages":[],"posts":[{"title":"instanceof的原理及手写实现","slug":"instanceof的原理及手写实现","date":"2019-08-21T05:28:14.000Z","updated":"2019-08-21T05:52:59.443Z","comments":true,"path":"2019/08/21/instanceof的原理及手写实现/","link":"","permalink":"http://yoursite.com/2019/08/21/instanceof的原理及手写实现/","excerpt":"","text":"instanceof 的作用简单说，instanceof的主要的实现原理就是只要右边变量的 prototype 在左边变量的原型链上即可。 12345678910111213// A对象function A()&#123;&#125;// B对象继承A(组合继承)function B()&#123; A.apply(this, arguments)&#125;B.prototype = Object.create(A.prototype)let b = new B()console.log(b instanceof A) // true 手写实现 1234567891011121314151617function _instanceof(left, right)&#123; let _prototype = right.prototype; let _proto = left.__proto__ while(true)&#123; // 找到头了 if(_proto === null)&#123; return false &#125; if(_proto === _prototype)&#123; return true &#125; _proto = _proto.__proto__ &#125;&#125; 使用示例 1_instanceof(b, A) //true","categories":[],"tags":[{"name":"JavaScript","slug":"JavaScript","permalink":"http://yoursite.com/tags/JavaScript/"}]},{"title":"new的原理及手写实现","slug":"new的原理及手写实现","date":"2019-08-21T05:00:09.000Z","updated":"2019-08-21T05:21:10.181Z","comments":true,"path":"2019/08/21/new的原理及手写实现/","link":"","permalink":"http://yoursite.com/2019/08/21/new的原理及手写实现/","excerpt":"","text":"new 的作用 创建一个新对象 把obj的proto指向Object的prototype 实现继承 执行构造函数，传递参数，改变this指向 最后赋值给变量 手写实现 1234567891011121314const _new = function()&#123; const constructor = Array.prototype.shift.call(arguments); // 创建一个新对象 const obj = new Object(); // 把obj的__proto__指向Object的prototype obj.__proto__ = constructor.prototype; // 执行构造函数，传递参数，改变this执行 constructor.apply(obj, Array.prototype.slice.apply(arguments)); return obj&#125; 使用示例 1234567891011function Dog(name)&#123; this.name = name;&#125;Dog.prototype.getName = function()&#123; return this.name;&#125;let dog = _new(Dog, '小狗');console.log(dog.name) // 小狗console.log(dog.getName()) // 小狗","categories":[],"tags":[{"name":"JavaScript","slug":"JavaScript","permalink":"http://yoursite.com/tags/JavaScript/"}]},{"title":"vue 学习心得","slug":"vue-学习心得","date":"2019-08-21T03:03:13.000Z","updated":"2019-08-21T03:04:04.172Z","comments":true,"path":"2019/08/21/vue-学习心得/","link":"","permalink":"http://yoursite.com/2019/08/21/vue-学习心得/","excerpt":"","text":"过滤器","categories":[],"tags":[{"name":"Vue","slug":"Vue","permalink":"http://yoursite.com/tags/Vue/"}]}]}